// js中的禁止转换

var num = 10;
num.toString(x=2);
// x可以作为任何进制的名称

parseInt('1001', radix=6)
/* radix基数 默认为10， 如果遇到无法解析的 基数 输出NAN，所以说 这个api在
字符串解析为数字的时候会遇到坑
*/

/*
*关于 左右移动    逻辑 数学位移思考下 ，后续写上来
* 左侧移动，符号位自动占用上一位，如果移动的位置过多是会溢出的，有效的的左移不用担心数据最高位会改变符号位，也就不用区分逻辑左移和算术左移。
*/
 /*
 *  关于原码、反码、补码
 *  1、计算机只识别 0和1    正数和负数存在最高位为符号位，1为负数  0为正数，
 *  2、但是在二进制计算的时候，如果还要考虑符号为，底层方法就尤为复杂，故出现反码，   由原码换算为反码，反码相加，在置换为原码，
 *  这样计算机就只需要计算   加法，（正数的反码使其本身，负数的反码 保持其符号位置不变，其他位置取反，）
 *  3、 正数的补码使其本身，负数的补码在其反码的基础上 + 1，
 */